<!-- Toast UI Editor Styles -->
<link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor.min.css" />

<!-- Toast UI Editor Script -->
<script src="https://uicdn.toast.com/editor/latest/toastui-editor-all.min.js"></script>

<div class="max-w-4xl mx-auto bg-gray-900 text-gray-100 p-8 rounded-2xl shadow-xl">
    <h1 class="text-2xl font-semibold mb-6">Create New Compound</h1>
  
    <form id="compound-form" action="/compounds/new" method="POST" class="space-y-8">
  
      <!-- Name + Synonyms -->
      <div class="grid grid-cols-1 gap-6">
        <div>
          <label for="name" class="block text-sm font-medium mb-1">Name</label>
          <input type="text" id="name" name="name"
                 class="w-full rounded-xl border border-gray-700 bg-gray-800 px-4 py-3 text-white focus:ring-2 focus:ring-blue-500"
                 placeholder="e.g. Benzene">
        </div>
        <div>
          <label for="synonyms" class="block text-sm font-medium mb-1">Synonyms</label>
          <input type="text" id="synonyms" name="synonyms"
                 class="w-full rounded-xl border border-gray-700 bg-gray-800 px-4 py-3 text-white focus:ring-2 focus:ring-blue-500"
                 placeholder="Alternate names">
        </div>
      </div>
      
      <!-- File Upload Section -->
<div class="space-y-4">
    <label for="structure-image" class="block text-sm font-medium mb-2">Structure Image</label>
    
    <!-- Upload New Image -->
    <input type="file" id="structure-image" name="structureImage" accept="image/*"
           class="w-full rounded-xl border border-gray-700 bg-gray-800 px-4 py-3 text-white focus:ring-2 focus:ring-blue-500">
    
    

    <!-- Show Uploaded Image Preview -->
    <div id="image-preview" class="mt-4 max-w-[400px] mx-auto hidden">
      <h3 class="text-sm text-gray-300">Preview:</h3>
      <img src="" alt="Structure Image" id="uploaded-image" class="w-full rounded-xl">
    </div>
  </div>

  

      <!-- Description -->
      <div>
        <label for="description" class="block text-sm font-medium mb-2">Description</label>
        <textarea id="description" name="description" class="hidden"></textarea>
        <div id="toast-editor" class="rounded-xl border border-gray-700 bg-gray-800 p-4 shadow-sm"></div>
      </div>
  
      <!-- CAS, Formula, Weight -->
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div>
          <label for="cas" class="block text-sm font-medium mb-1">CAS Number</label>
          <input type="text" id="cas" name="cas"
                 class="w-full rounded-xl border border-gray-700 bg-gray-800 px-4 py-3 text-white focus:ring-2 focus:ring-blue-500"
                 placeholder="e.g. 108-88-3">
          <p id="cas-error" class="text-sm text-red-400 mt-1 hidden">Invalid CAS number</p>
        </div>
  
        <div>
          <label for="formula" class="block text-sm font-medium mb-1">Molecular Formula</label>
          <input type="text" id="formula" name="formula"
                 class="w-full rounded-xl border border-gray-700 bg-gray-800 px-4 py-3 text-white focus:ring-2 focus:ring-blue-500"
                 placeholder="e.g. C6H6">
          <p id="formula-error" class="text-sm text-red-400 mt-1 hidden">Invalid formula</p>
        </div>
  
        <div>
          <label for="molecular-weight" class="block text-sm font-medium mb-1">Molecular Weight</label>
          <div class="flex">
            <input type="text" id="molecular-weight" name="molecularWeight" readonly
                   class="w-full rounded-l-xl border border-gray-700 bg-gray-700 px-4 py-3 text-white">
            <button type="button" id="calc-weight-btn"
                    class="rounded-r-xl bg-blue-600 px-4 py-3 text-white hover:bg-blue-700 transition whitespace-nowrap">
              Calculate
            </button>
          </div>
        </div>
      </div>
  
      <!-- Categories -->
      <div>
        <h2 class="text-lg font-semibold mb-4">Categories</h2>
        <div class="space-y-4">
          <% Object.entries(categories).forEach(([level, items]) => { %>
          <div class="rounded-xl border border-gray-700 bg-gray-800">
            <button type="button"
                    class="w-full text-left px-4 py-3 font-medium hover:bg-gray-700 rounded-xl"
                    onclick="toggleCollapse('<%= level %>-content')">
              <%= "Level " + level.slice(-1) %>
            </button>
            <div id="<%= level %>-content" class="hidden px-4 py-3 space-y-2">
              <% items.forEach(item => { %>
              <label class="flex items-center gap-2">
                <input type="checkbox" name="categories[<%= level %>][]" id="<%= level %>-<%= item.id %>"
                       value='<%= JSON.stringify({ id: item.id, label: item.label }) %>'
                       class="accent-blue-500">
                <span><%= item.label %></span>
              </label>
              <% }) %>
            </div>
          </div>
          <% }) %>
        </div>
      </div>
  
      <!-- H/P Phrases -->
      <div>
        <h2 class="text-lg font-semibold mb-4">Safety Phrases</h2>
  
        <!-- H Phrases -->
        <div class="rounded-xl border border-gray-700 bg-gray-800 mb-4">
          <button type="button"
                  class="w-full text-left px-4 py-3 font-medium rounded-xl hover:bg-gray-700"
                  onclick="toggleCollapse('hPhrases-content')">
            H-Phrases (Hazards)
          </button>
          <div id="hPhrases-content" class="hidden px-4 py-3 space-y-2 max-h-[400px] overflow-y-auto">
            <% hPhrases.forEach(item => { %>
            <label class="flex items-start gap-2">
              <input type="checkbox" name="hPhrases[]" value='<%= JSON.stringify({ id: item.id, description: item.description }) %>' class="mt-1 accent-blue-500">
              <span><strong><%= item.id %></strong>: <%= item.description %></span>
            </label>
            <% }) %>
          </div>
        </div>
  
        <!-- P Phrases -->
        <div class="rounded-xl border border-gray-700 bg-gray-800">
          <button type="button"
                  class="w-full text-left px-4 py-3 font-medium rounded-xl hover:bg-gray-700"
                  onclick="toggleCollapse('pPhrases-content')">
            P-Phrases (Precautions)
          </button>
          <div id="pPhrases-content" class="hidden px-4 py-3 space-y-2 max-h-[400px] overflow-y-auto">
            <% pPhrases.forEach(item => { %>
            <label class="flex items-start gap-2">
              <input type="checkbox" name="pPhrases[]" value='<%= JSON.stringify({ id: item.id, description: item.description }) %>' class="mt-1 accent-blue-500">
              <span><strong><%= item.id %></strong>: <%= item.description %></span>
            </label>
            <% }) %>
          </div>
        </div>
      </div>
  
      <!-- Pictograms -->
      <div>
        <h2 class="text-lg font-semibold mb-4">Pictograms</h2>
        <div class="grid grid-cols-2 md:grid-cols-3 gap-6">
          <% pictograms.forEach(item => { %>
          <label class="flex flex-col items-center gap-2 bg-gray-800 p-4 rounded-xl border border-gray-700 hover:border-blue-500 transition cursor-pointer">
            <input type="checkbox" name="pictograms[]" value='<%= JSON.stringify({ id: item.id, label: item.label, link: item.link }) %>'
                   class="accent-blue-500">
            <img src="/images/pictograms/<%= item.link %>" alt="<%= item.label %>" class="w-16 h-16 object-contain">
            <div class="text-sm text-center">
              <strong><%= item.id %></strong><br>
              <%= item.label %>
            </div>
          </label>
          <% }) %>
        </div>
      </div>
  
      <!-- Submit Button -->
      <div class="text-right">
        <button type="submit"
                class="bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-xl font-semibold text-white transition">
          Submit Compound
        </button>
      </div>
    </form>
  </div>
  
  
  <script src="/js/compoundForm/compoundFormMenuCollapse.js"></script>
  <script src="/js/compoundForm/compoundFormValidation.js"></script>
  <script>
    const editor = new toastui.Editor({
      el: document.querySelector('#toast-editor'),
      height: '400px',
      initialEditType: 'markdown',
      previewStyle: 'vertical',
      placeholder: 'Write description here...',
    });
  
    // Sync the markdown content to hidden textarea on submit
    document.getElementById('compound-form').addEventListener('submit', function () {
      document.getElementById('description').value = editor.getMarkdown();
    });


    // IMAGE

    // Image Preview Function
const imageInput = document.getElementById('structure-image');
const imagePreview = document.getElementById('image-preview');
const uploadedImage = document.getElementById('uploaded-image');

imageInput.addEventListener('change', function(event) {
  const file = event.target.files[0];
  
  if (file) {
    const reader = new FileReader();
    reader.onload = function(e) {
      uploadedImage.src = e.target.result;
      imagePreview.classList.remove('hidden');  // Show preview
    }
    reader.readAsDataURL(file);
  }
});
  </script>